{"version":3,"sources":["components/About.js","components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","className","style","id","type","Alert","height","alertTxt","role","msg","Navbar","to","title","about","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","disabled","length","newtext","toUpperCase","allAlert","toLowerCase","navigator","clipboard","writeText","queryString","replace","split","join","filter","element","defaultProps","App","setMode","alert","setAlert","showAlert","message","setTimeout","actions","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8bacb73.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    \r\n\r\n    // imp for using the dark mode of this page button \r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',    \r\n    //     backgroundColor: 'white',\r\n    //     border: '2px solid white',\r\n    // });    \r\n\r\n\r\n    // const [modeTxt, setModeTxt] = useState(\"Enable Dark Mode\");\r\n\r\n    // const toggleMode = ()=> {\r\n    //     if(myStyle.color === 'black'){\r\n    //         setMyStyle(\r\n    //             {\r\n    //                 color: 'white',\r\n    //                 backgroundColor: 'black',\r\n    //                 border: '2px solid white',\r\n    //             }\r\n    //         )\r\n    //         setModeTxt(\"Enable Light Mode\");\r\n    //     }\r\n\r\n    //     else{\r\n    //         setMyStyle(\r\n    //             {\r\n    //                 color: 'black',\r\n    //                 backgroundColor: 'white',\r\n    //                 border: '2px solid white',\r\n    //             }\r\n    //         )\r\n    //         setModeTxt(\"Enable Dark Mode\");\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? '#083546' : 'white',\r\n        border: '2px solid white',\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={myStyle}>\r\n                <h2 className=\"my-3\">About Us {props.mode} </h2>\r\n                <div className=\"accordion\" id=\"accordionExample\" >\r\n                    <div className=\"card\"  style={myStyle}>\r\n                        <div className=\"card-header\" id=\"headingOne\">\r\n                            <h2 className=\"mb-0\">\r\n                                <button className=\"btn btn-link btn-block text-left\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                    Collapsible Group Item #1\r\n                                </button>\r\n                            </h2>\r\n                        </div>\r\n\r\n                        <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n                            <div className=\"card-body\">\r\n                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\"  style={myStyle}>\r\n                        <div className=\"card-header\" id=\"headingTwo\">\r\n                            <h2 className=\"mb-0\">\r\n                                <button className=\"btn btn-link btn-block text-left collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                    Collapsible Group Item #2\r\n                                </button>\r\n                            </h2>\r\n                        </div>\r\n                        <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\r\n                            <div className=\"card-body\">\r\n                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\"  style={myStyle}>\r\n                        <div className=\"card-header\" id=\"headingThree\">\r\n                            <h2 className=\"mb-0\">\r\n                                <button className=\"btn btn-link btn-block text-left collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                    Collapsible Group Item #3\r\n                                </button>\r\n                            </h2>\r\n                        </div>\r\n                        <div id=\"collapseThree\" className=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordionExample\">\r\n                            <div className=\"card-body\">\r\n                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <button className=\"btn btn-primary my-3\" onClick={toggleMode}> {modeTxt} </button> */}\r\n                <br />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    // const capitalze = (word)=> {\r\n    //     const lower = word.toLowerCase();\r\n    //     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ height: '50px' }}>\r\n                <div className={`alert alert-${props.alertTxt.type} alert-dismissible fade show text-center`} role=\"alert\">\r\n                    {/* <strong>  {capitalze(props.alertTxt.type)}  </strong>  {props.alertTxt.msg} */}\r\n                    <strong>  {(props.alertTxt.type)}  </strong>  {props.alertTxt.msg}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    {props.title}\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                \r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                        </li>\r\n                    </ul>\r\n                        \r\n                    <div className={`custom-control custom-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" onClick={props.toggleMode}/>\r\n                        <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Toggle Mode</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string,\r\n    actions: PropTypes.string,\r\n};\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title\",\r\n    about: \"Set About\"\r\n};\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const upperCase = () => {\r\n        const newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.allAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    const lowerCase = () => {\r\n        const newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.allAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const copyTxt = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.allAlert(\"Copied To Clipboard\", \"primary\");\r\n    }\r\n\r\n    function removeSpace() {\r\n        let queryString = text.replace(/(\\n)/g, \" \");\r\n        queryString = queryString.split(\" \").join(\"\");\r\n        setText(queryString);\r\n        props.allAlert(\"Extra spaces been removed\", \"success\");\r\n    }\r\n\r\n    // this is fat arrow function \r\n    // const clearText = () => {\r\n    //     setText(\"\");\r\n    // }\r\n\r\n\r\n    // this is normal function \r\n    function clearText() {\r\n        setText(\"\");\r\n        props.allAlert(\"Texts been cleared\", \"success\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"textPart\" style={{ color: props.mode === 'light' ? 'black' : 'white' }} >\r\n                <div className=\"container mt-2 mb-5\">\r\n                    <h3> {props.heading} </h3>\r\n                    <div className=\"form-group my-3\">\r\n                        <textarea className=\"form-control\" id=\"writeHere\" rows=\"8\" value={text} onChange={handleChange} style={{ backgroundColor: props.mode === 'light' ? 'white' : 'transparent', color: props.mode === 'light' ? 'black' : 'white' }}  ></textarea>\r\n                    </div>\r\n\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mr-2 my-2\" onClick={upperCase}>Convert To UpperCase</button>\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mr-2 my-2\" onClick={lowerCase}>Convert To lowerCase</button>\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mr-2 my-2\" onClick={clearText}>Clear Text</button>\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mr-2 my-2\" onClick={copyTxt}>Copy Text</button>\r\n                    <button disabled={text.length === 0} className=\"btn btn-primary mr-2 my-2\" onClick={removeSpace}>Remove Extra Spaces</button>\r\n\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <h4>Your Text Summary</h4>\r\n                    <p> {text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} charecters </p>\r\n                    <p> Time to read: {0.008 * text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes </p>\r\n\r\n                    <h4>Preview: </h4>\r\n                    <p> {text.length > 0 ? text : \"Nothing to Preview...\"} </p>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\n// this is for routing the stuffs\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\n\n\n\n\n\nfunction App() {\n\n\n  const [mode, setMode] = useState(\"light\")\n\n  const clickToggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#110d2b';\n      showAlert(\"Dark Mode Been Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n\n      // blinking the title \n      // setInterval(() => {\n      //   document.title = \"TextUtils - Amazing Stuff\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title = \"TextUtils - Install Now\";\n      // }, 4000);\n\n    }\n\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Been Enabled\", \"primary\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n\n  }\n\n\n  const [alert, setAlert] = useState('');\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n\n    setTimeout(() => {\n      setAlert('');\n    }, 2000);\n\n  }\n\n  return (\n\n\n    // {/* // here we will set which stuff to show by React router  */}\n    <Router>\n      <>\n        {/* <Navbar/> */}\n        <Navbar title=\"TextUtils\" about=\"About Us\" actions=\"The Taken Action\" mode={mode} toggleMode={clickToggleMode} />\n        <Alert alertTxt={alert} />\n\n        <Routes>\n\n          <Route exact path=\"/\" element={<TextForm heading=\"Type Something Here...\" mode={mode} allAlert={showAlert} />} />\n\n          <Route exact path=\"/about\" element={<About mode={mode} />} />\n\n        </Routes>\n\n      </>\n    </Router>\n\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}